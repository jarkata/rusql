[workspace]
members = [
    ".",
    "rusql-core",
    "rusql-rt",
    "rusql-macros",
    "rusql-bench",
]

[package]
name = "rusql"
version = "0.6.3"
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/launchbadge/rusql"
documentation = "https://docs.rs/rusql"
description = "ðŸ§° The Rust SQL Toolkit. An async, pure Rust SQL crate featuring compile-time checked queries without a DSL. Supports PostgreSQL, MySQL, and SQLite."
edition = "2021"
keywords = ["database", "async", "postgres", "mysql", "sqlite"]
categories = ["database", "asynchronous"]
authors = [
    "Ryan Leckey <leckey.ryan@gmail.com>",
    "Austin Bonander <austin.bonander@gmail.com>",
    "Chloe Ross <orangesnowfox@gmail.com>",
    "Daniel Akhterov <akhterovd@gmail.com>",
]

[package.metadata.docs.rs]
features = ["all", "runtime-tokio-native-tls"]
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["macros", "migrate"]
macros = ["rusql-macros"]
migrate = ["rusql-macros/migrate", "rusql-core/migrate"]

# [deprecated] TLS is not possible to disable due to it being conditional on multiple features
#              Hopefully Cargo can handle this in the future
tls = []

# offline building support in `rusql-macros`
offline = ["rusql-macros/offline", "rusql-core/offline"]

# intended mainly for CI and docs
all = ["tls", "all-databases", "all-types"]
all-databases = ["mysql", "sqlite", "postgres", "mssql", "any"]
all-types = [
    "bigdecimal",
    "decimal",
    "json",
    "time",
    "chrono",
    "ipnetwork",
    "mac_address",
    "uuid",
    "bit-vec",
    "bstr",
    "git2",
]

# previous runtimes, available as features for error messages better than just
# "feature doesn't exist"
runtime-actix = []
runtime-async-std = []
runtime-tokio = []

# actual runtimes
runtime-actix-native-tls = ["runtime-tokio-native-tls"]
runtime-async-std-native-tls = [
    "rusql-core/runtime-async-std-native-tls",
    "rusql-macros/runtime-async-std-native-tls",
    "_rt-async-std",
]
runtime-tokio-native-tls = [
    "rusql-core/runtime-tokio-native-tls",
    "rusql-macros/runtime-tokio-native-tls",
    "_rt-tokio",
]

runtime-actix-rustls = ["runtime-tokio-rustls"]
runtime-async-std-rustls = [
    "rusql-core/runtime-async-std-rustls",
    "rusql-macros/runtime-async-std-rustls",
    "_rt-async-std",
]
runtime-tokio-rustls = [
    "rusql-core/runtime-tokio-rustls",
    "rusql-macros/runtime-tokio-rustls",
    "_rt-tokio",
]

# for conditional compilation
_rt-async-std = []
_rt-tokio = []

# database
any = ["rusql-core/any"]
postgres = ["rusql-core/postgres", "rusql-macros/postgres"]
mysql = ["rusql-core/mysql", "rusql-macros/mysql"]
sqlite = ["rusql-core/sqlite", "rusql-macros/sqlite"]
mssql = ["rusql-core/mssql", "rusql-macros/mssql"]

# types
bigdecimal = ["rusql-core/bigdecimal", "rusql-macros/bigdecimal"]
decimal = ["rusql-core/decimal", "rusql-macros/decimal"]
chrono = ["rusql-core/chrono", "rusql-macros/chrono"]
ipnetwork = ["rusql-core/ipnetwork", "rusql-macros/ipnetwork"]
mac_address = ["rusql-core/mac_address", "rusql-macros/mac_address"]
uuid = ["rusql-core/uuid", "rusql-macros/uuid"]
json = ["rusql-core/json", "rusql-macros/json"]
time = ["rusql-core/time", "rusql-macros/time"]
bit-vec = ["rusql-core/bit-vec", "rusql-macros/bit-vec"]
bstr = ["rusql-core/bstr"]
git2 = ["rusql-core/git2"]

[dependencies]
rusql-core = { version = "0.6.3", path = "rusql-core", default-features = false }
rusql-macros = { version = "0.6.3", path = "rusql-macros", default-features = false, optional = true }

[dev-dependencies]
anyhow = "1.0.52"
time_ = { version = "0.3.2", package = "time" }
futures = "0.3.19"
env_logger = "0.9.0"
async-std = { version = "1.10.0", features = ["attributes"] }
tokio = { version = "1.15.0", features = ["full"] }
dotenvy = "0.15.0"
trybuild = "1.0.53"
rusql-rt = { path = "./rusql-rt" }
paste = "1.0.6"
serde = { version = "1.0.132", features = ["derive"] }
serde_json = "1.0.73"
url = "2.2.2"
rand = "0.8.4"
rand_xoshiro = "0.6.0"
hex = "0.4.3"
tempdir = "0.3.7"
# Needed to test SQLCipher
libsqlite3-sys = { version = "0.24", features = ["bundled-sqlcipher"] }

